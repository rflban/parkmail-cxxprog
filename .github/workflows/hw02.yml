name: Homework02 CI
on:
  push:
    branches:
      - hw02
      - master
  pull_request:
    branches:
      - master
jobs:
  build_and_test:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install tools and dependencies
        run: |
          sudo apt install build-essential
          sudo apt install git
          sudo apt install lcov
          sudo apt install valgrind
          sudo apt install clang-tidy
          sudo apt install libgtest-dev
          sudo apt install ripgrep
      - name: Create report directories
        run: |
          mkdir homework02/{report-valgrind,report-sanitizers,report-linters,report-stresstest}
      - name: Build serial implementation
        run: |
          cd homework02
          cmake -B build_serial -DCMAKE_EXPORT_COMPILE_COMMANDS=1 \
            -DCMAKE_BUILD_TYPE=Debug -DWITH_COVERAGE=1 -DWITH_ASAN=0 \
            -DMULTIPROCESS=0 -DWITH_TESTS=1
          cmake --build build_serial
      - name: Build serial implementation with sanitizers
        run: |
          cd homework02
          cmake -B build_serial_san -DCMAKE_EXPORT_COMPILE_COMMANDS=1 \
            -DCMAKE_BUILD_TYPE=Debug -DWITH_COVERAGE=1 -DWITH_ASAN=1 \
            -DMULTIPROCESS=0 -DWITH_TESTS=1
          cmake --build build_serial_san
      - name: Build multiprocess implementation
        run: |
          cd homework02
          cmake -B build_parallel -DCMAKE_EXPORT_COMPILE_COMMANDS=1 \
            -DCMAKE_BUILD_TYPE=Debug -DWITH_COVERAGE=1 -DWITH_ASAN=0 \
            -DMULTIPROCESS=1 -DWITH_TESTS=1
          cmake --build build_parallel
      - name: Build multiprocess implementation with sanitizers
        run: |
          cd homework02
          cmake -B build_parallel_san -DCMAKE_EXPORT_COMPILE_COMMANDS=1 \
            -DCMAKE_BUILD_TYPE=Debug -DWITH_COVERAGE=1 -DWITH_ASAN=1 \
            -DMULTIPROCESS=1 -DWITH_TESTS=1
          cmake --build build_parallel_san
      - name: Run collections unit tests
        run: |
          cd homework02
          ./build_serial/lib/collections/tests/unittests/run_unittests_collections
      - name: Valgrind check collections
        run: |
          cd homework02
          valgrind \
            --tool=memcheck --leak-check=full \
            --show-leak-kinds=all --undef-value-errors=no \
            --verbose --log-file=./report-valgrind/collections.txt \
            -- ./build_serial/lib/collections/tests/unittests/run_unittests_collections
          cat ./report-valgrind/collections.txt
      - name: Sanitizers check collections
          cd homework02
          ./build_serial_san/lib/collections/tests/unittests/run_unittests_collections 2>&1 >./report-sanitizers/collections.txt
      - name: Run serial matches unit tests
        run: |
          cd homework02
          ./build_serial/tests/unittests/run_unittests_matches
      - name: Valgrind check serial matches
          cd homework02
          valgrind \
            --tool=memcheck --leak-check=full \
            --show-leak-kinds=all --undef-value-errors=no \
            --verbose --log-file=./report-valgrind/matches-serial.txt \
            -- ./build_serial/tests/unittests/run_unittests_matches
          cat ./report-valgrind/matches-serial.txt
      - name: Sanitizers check serial matches
        run: |
          cd homework02
          ./build_serial_san/tests/unittests/run_unittests_matches 2>&1 >./report-sanitizers/matches-serial.txt
      - name: Run multiprocess matches unit tests
        run: |
          cd homework02
          ./build_parallel/tests/unittests/run_unittests_matches
      - name: Valgrind check multiprocess matches
          cd homework02
          valgrind \
            --tool=memcheck --leak-check=full \
            --show-leak-kinds=all --undef-value-errors=no \
            --verbose --log-file=./report-valgrind/matches-parallel.txt \
            -- ./build_parallel/tests/unittests/run_unittests_matches
          cat ./report-valgrind/matches-parallel.txt
      - name: Sanitizers check multiprocess matches
        run: |
          cd homework02
          ./build_parallel_san/tests/unittests/run_unittests_matches 2>&1 >./report-sanitizers/matches-parallel.txt
      - name: Collect coverage report
        run: |
          cd homework02
          lcov -t "serial" -o serial.info -c -d ./build_serial
          lcov --extract serial.info "*/homework02/*" -o serial.info
          lcov -t "parallel" -o parallel.info -c -d ./build_parallel
          lcov --extract parallel.info "*/homework02/*" -o parallel.info
          lcov --add-tracefile serial.info -a parallel.info -o homework02.info
          genhtml -o report-coverage homework02.info
      - name: Archive valgrind report
        uses: actions/upload-artifact@v2
        with:
          name: report-valgrind
          path: homework02/report-valgrind
      - name: Archive coverage report
        uses: actions/upload-artifact@v2
        with:
          name: report-coverage
          path: homework02/report-coverage
